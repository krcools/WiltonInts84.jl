using Test
using WiltonInts84

# The values that are tested against in this test were calculated using Wolfram Mathematica 13.0,
# where possible the integrals over a triangle domain were calculated directly, for the "fundamentals",
# the expressions given in "Järvenpää, S., Taskinen, M., & Ylä‐Oijala, P. (2003). Singularity extraction 
# technique for integral equation methods with higher order basis functions on plane triangles and 
# tetrahedra. International Journal for Numerical Methods in Engineering, 58(8), 1149-1165." were used.

p1 = [-1.0,0.0,0.1]
p2 = [1.0,-0.1,0.2]
p3 = [0.0,1.0,0.3]
x = [0.1,0.1,0.1]
N = 7

T = eltype(p1)
p = [p1,p2,p3]
s, m, t0, l, sm, sp, Rm, Rp, R0, û, v̂, ŵ, u0,v0,w0,u3,v3,l3 = WiltonInts84.fundamentals(p,x)
∫∂ΔᵢR⁻¹,∫∂ΔᵢRⁿ,Σmᵢ∫∂ΔᵢRⁿ,∫∂ΔᵢRⁿs,∫∂ΔᵢRⁿu,∫∂ΔᵢRⁿv,Σmᵢ∫∂ΔᵢRⁿu,Σmᵢ∫∂ΔᵢRⁿv = WiltonInts84.lineintegrals(m, l, sm, sp, Rm, Rp, R0,u3,v3,l3,N,T)
∫ΔRⁿ, ∫NᵢRⁿ,∫Δ∇Rⁿ, ∫Δ∇RⁿNᵢ#= , ∫ΔRⁿu, ∫ΔRⁿv, ∫Δ∇Rⁿu, ∫Δ∇Rⁿv =# = higherorder(p1,p2,p3,x,N)

@testset "Fundamentals" begin

    @test s[1] ≈ [-0.6711560552140243, 0.7382716607354267, 0.06711560552140242]
    @test s[2] ≈  [-0.7001400420140049, -0.7001400420140049, -0.1400280084028010]
    @test s[3] ≈ [0.9975093361076329, -0.04987546680538165, 0.04987546680538165]

    @test m[1] ≈ [0.7391615228663304, 0.6595595127114948, 0.1364605888368610]
    @test m[2] ≈ [-0.7117683112538451, 0.6999055060662811, 0.05931402593782041]
    @test m[3] ≈ [-0.04225318585186896, -0.9887245489337335, -0.1436608318963544]

    @test û ≈ [0.9975093361076329, -0.04987546680538165, 0.04987546680538165]
    @test v̂ ≈ [0.04225318585186896, 0.9887245489337335, 0.1436608318963544]
    @test ŵ ≈ [-0.05647824947249051, -0.1411956236812262, 0.9883693657685838]

    @test u0 ≈ 1.092272723037858
    @test v0 ≈ 0.1453509593304292
    @test w0 ≈ -0.07624563678786218

    @test u3 ≈ 0.9576089626633276
    @test v3 ≈ 1.059709901164873
    @test l3 ≈ 2.004993765576342
    @test l[2] ≈ 1.428285685708570
    @test l[1] ≈ 1.489966442575134

    @test t0 ≈ [0.5469795269210845,0.7129545917726015,0.1453509593304292]
    @test sm ≈ [-0.7449832212875670,-0.5881176352917641,-1.092272723037858]
    @test sp == sm + l
    @test Rp ≈ [0.9273618495495704,1.104536101718726,0.9273618495495704]
    @test Rm == Rp[[3,1,2]]

    @test R0 == sqrt.(t0.^2 .+w0^2)
end

@testset "Integrals along edges" begin
    @test ∫∂ΔᵢR⁻¹ ≈ [2.215897253274114,1.746144893551422,5.010948421407080]
    @test ∫∂ΔᵢRⁿ[:,1] ≈ [2.215897253274114,1.746144893551422,5.010948421407080]
    @test ∫∂ΔᵢRⁿ[:,2] ≈ [1.028793349100451,1.185558852654665,1.093936888163383]
    @test ∫∂ΔᵢRⁿ[:,3] ≈ [0.5324101563366969,0.8574368479808430,0.5720527845910983]

    @test Σmᵢ∫∂ΔᵢRⁿ[1] ≈ [0.1833268512139496, -2.270795179711544, -0.3139234913179948]
    @test Σmᵢ∫∂ΔᵢRⁿ[2] ≈ [-0.1296210824559981, 0.4267273524408307, 0.05355413135120448]

    @test Σmᵢ∫∂ΔᵢRⁿu[2] ≈ [0.6958595248096215, 0.3863830113384588, 0.09496097446604391]

    @test ∫∂ΔᵢRⁿs[:,1] ≈ [0.0,0.1771742521691456,-0.1771742521691755] # R⁻¹s
    @test ∫∂ΔᵢRⁿs[:,2] ≈ [0.0, 0.1833342844947274, -0.1833342844947593] # R¹s
    @test ∫∂ΔᵢRⁿs[:,3] ≈ [0.0, 0.1916229419742457, -0.1916229419742807] # R³s

    @test ∫∂ΔᵢRⁿu[:,1] ≈ [3.282411624020176,0.8648140367225746,5.296148025053476] # R⁻¹u
    @test ∫∂ΔᵢRⁿu[:,2] ≈ [1.523952991420003,0.5449062043441008,1.011543138952534] # R¹u

    @test ∫∂ΔᵢRⁿv[:,1] ≈ [1.174104129627812,0.9570211152080427,0] # R⁻¹v
    @test ∫∂ΔᵢRⁿv[:,2] ≈ [0.5451112491471818,0.6030044856134333,0] # R¹v
end

@testset "Integrals on triangle" begin

    @test isapprox(∫ΔRⁿ[1:5], [65.00247896534219,2.807433378474648,0.5277680105271416,0.1989767586863519,0.1010657157537932],rtol = 1e-7)
    #= @test ∫ΔRⁿu[1:4] ≈ [70.71996607604804,2.918572470729420,0.4906316621555974,0.1621663135242193]
    @test ∫ΔRⁿv[1:4] ≈ [11.73071615828743,0.8321957547080167,0.2024072402626597,0.07774312014869334] =#

    @test isapprox(∫NᵢRⁿ[1], [23.94786564479930,29.98487255480569,11.06974290359332],rtol = 1e-7)
    @test isapprox(∫NᵢRⁿ[2], [0.9415479542967703,1.080580510904582,0.7853052555168500],rtol = 1e-6)
    @test isapprox(∫NᵢRⁿ[3], [0.1832857491988661,0.1534797555975901,0.1910024998729992],rtol = 1e-7)
    @test isapprox(∫NᵢRⁿ[4], [0.07977178434558089,0.04584232958957308,0.07336264393041449],rtol = 1e-7)
    @test isapprox(∫NᵢRⁿ[5], [0.04742825997959717,0.01895928873078851,0.03467816712309660],rtol = 1e-7)
    @test isapprox(∫NᵢRⁿ[6], [0.03343315621453039,0.009479967618852425,0.01865745680365062],rtol = 1e-7)


    @test ∫Δ∇Rⁿ[1] ≈ [-0.4632418388505785, 1.571007711206942, 5.212435770506566]
    @test isapprox(∫Δ∇Rⁿ[2], [0.1417104910316754, -0.3965038557743711, -0.2651190867890283],rtol = 1e-6)
    @test isapprox(∫Δ∇Rⁿ[3], [0.2477483819361655, -0.3686331723903567, -0.1606454273180411],rtol = 1e-7)
    @test isapprox(∫Δ∇Rⁿ[4], [0.2691356524528451, -0.2444036752314375, -0.09628380919475065],rtol = 1e-7)
    @test isapprox(∫Δ∇Rⁿ[5], [0.2700287997270988, -0.1587296667830697, -0.06182093603037507],rtol = 1e-7)

    #= @test isapprox(∫Δ∇Rⁿu[1], [0.9089992463013101, 1.564836253792550, 5.731031102119797])
    @test isapprox(∫Δ∇Rⁿu[2], [-0.1568379930278446, -0.3812856476516040, -0.2885785460195418],rtol = 1e-6)

    @test isapprox(∫Δ∇Rⁿv[1], [-0.1185673348456148, 1.205274797275603, 1.070347791813962])
    @test isapprox(∫Δ∇Rⁿv[2], [0.05215772098264756, -0.2508032428712024, -0.09704653584207835],rtol = 1e-6) =#

    @test isapprox(∫Δ∇RⁿNᵢ[1][1],[-0.8581612321048532, 0.1963934960832928, 1.826425231838921],rtol = 1e-7)
    @test isapprox(∫Δ∇RⁿNᵢ[1][2],[0.5068059922347053, 0.2372512540882757, 2.375972061160124])
    @test isapprox(∫Δ∇RⁿNᵢ[1][3],[-0.1118865971859668, 1.137362966931534, 1.010038493211580])

    @test isapprox(∫Δ∇RⁿNᵢ[2][1], [0.1942228406478255, -0.08270136833914341, -0.07334971127076222],rtol =1e-7)
    @test isapprox(∫Δ∇RⁿNᵢ[2][2],[-0.1017311994212688, -0.07713081479799080, -0.1001909706716161],rtol=1e-7)
    @test isapprox(∫Δ∇RⁿNᵢ[2][3],[0.04921886728180403, -0.2366716047434396, -0.09157839870647723],rtol=1e-7)

    @test length(∫NᵢRⁿ) == N÷2+3
    @test length(∫Δ∇RⁿNᵢ) == N÷2+2
end
